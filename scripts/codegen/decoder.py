import argparse
import yaml
import sys
from pathlib import Path
import textwrap
import constants

HEADER = textwrap.dedent(
    """
    /*
     * This file is autogenerated by 'decoder.py' script from .yaml file in riscv-opcodes repo
     * Do not try to change anything in this file
     *****************************************************************************************
     * Written by Derzhavin Andrey (derzhavin3016)
     */

    #include "decoder/decoder.hh"

    namespace sim \{

    """
)

FOOTER = textwrap.dedent(
    """

    \}
    """
)

FUNC_HEADER = textwrap.dedent(
    """
    Instruction Decoder::decode(Word binInst) \{

    """
)

FUNC_FOOTER = FOOTER

def gen_cc(filename, yaml_dict):
    to_write = HEADER


def main():
    parser = argparse.ArgumentParser(
        description="Tool to generate decoder function according to riscv encoding"
    )

    parser.add_argument(
        "-y", "--yaml", required=True, type=Path, help="RiscV .yaml file"
    )
    parser.add_argument(
        "-o", "--output", required=True, type=Path, help="Output .cc file"
    )

    args = parser.parse_args()

    with open(args.yaml) as yml:
        yaml_data = yaml.safe_load(yml)

    gen_cc(args.output, yaml_data)


if "__main__" == __name__:
    main()
